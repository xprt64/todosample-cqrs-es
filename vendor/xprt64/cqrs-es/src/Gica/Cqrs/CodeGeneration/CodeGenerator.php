<?php


namespace Gica\Cqrs\CodeGeneration;

use Gica\CodeAnalysis\MethodListenerDiscovery\MapCodeGenerator;
use Gica\FileSystem\FileSystemInterface;
use Gica\FileSystem\OperatingSystemFileSystem;

class CodeGenerator
{
    /**
     * @var MapCodeGenerator
     */
    private $codeGenerator;
    /**
     * @var FileSystemInterface
     */
    private $fileSystem;

    public function __construct(
        MapCodeGenerator $codeGenerator,
        FileSystemInterface $fileSystem = null
    )
    {
        $this->codeGenerator = $codeGenerator;
        $this->fileSystem = $fileSystem ?? new OperatingSystemFileSystem();
    }

    public function discoverAndPutContents(
        array $map,
        string $templateClassName,
        string $outputFilePath,
        string $outputShortClassName)
    {

        $this->deleteFileIfExists($outputFilePath);

        $template = $this->loadTemplate($templateClassName, $outputShortClassName);

        $code = $this->codeGenerator->generateAndGetFileContents($map, $template);

        $this->fileSystem->filePutContents($outputFilePath, $code);

        $this->fileSystem->fileSetPermissions($outputFilePath, 0777);
    }

    private function deleteFileIfExists(string $outputFilePath)
    {
        if ($this->fileSystem->fileExists($outputFilePath)) {
            $this->fileSystem->fileDelete($outputFilePath);
        }
    }

    private function loadTemplate(string $templateClassName, string $outputShortClassName)
    {
        $classInfo = new \ReflectionClass($templateClassName);

        $template = file_get_contents($classInfo->getFileName());

        $template = str_replace($classInfo->getShortName(), $outputShortClassName, $template);

        $template = str_replace('--- This is just a template ---', '--- generated by ' . __FILE__ . ' at ' . date('c') . ' ---', $template);

        return $template;
    }
}